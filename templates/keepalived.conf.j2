global_defs {
}

{% for vs in nlb_forward %}
{% set frontend = nlb_forward_ip %}
{% if nlb_forward_ip is string %}
{% set frontend = [nlb_forward_ip] %}
{% endif %}
{% for ip in frontend %}{% if
    (ip.find('.') > 0 and not(nlb_forward[vs].family is defined and nlb_forward[vs].family == 'ipv6'))
    or
    (ip.find(':') > 0 and (nlb_forward[vs].family is defined and nlb_forward[vs].family == 'ipv6'))
%}
virtual_server {{ ip }} {{ nlb_forward[vs].port }} {
    delay_loop 15
    lb_algo {{ nlb_forward[vs].algo | default('rr')  | lower }}
    lb_kind {{ nlb_forward[vs].type | default('NAT') | upper }}
{% if nlb_forward[vs]['persistence'] is defined and nlb_forward[vs].persistence > 0 %}
    persistence_timeout {{ nlb_forward[vs].persistence }}
{% endif %}
    protocol {{ nlb_forward[vs].proto | default('TCP') | upper }}

{% for backend in nlb_forward[vs].backends %}
{% if (ip.find('.') > 0 and backend.ip.find('.') > 0) or
      (ip.find(':') > 0 and backend.ip.find(':') > 0) %}
    real_server {{ backend.ip }} {{ backend.port }} {
        weight 1
{% for check in nlb_backends_health_check %}{% if check.name == backend.health_check %}
{% if check.proto == "http" %}
        HTTP_GET {
            url {
                path {{ check.path | default('/healthz') }}
            }
            connect_timeout 3
            retry 3
            delay_before_retry 2
        }
{% elif check.proto == "https" %}
        SSL_GET {
            url {
                path {{ check.path | default('/healthz') }}
            }
            connect_timeout 3
            retry 3
            delay_before_retry 2
        }
{% elif check.proto == "tcp" %}
        TCP_CHECK {
            connect_timeout 3
            retry 3
            delay_before_retry 2
{% if check.port is defined %}
            connect_port {{ check.port }}
{% endif %}
        }
{% endif %}
{% endif %}{% endfor %}
    }
{% endif %}{% endfor %}
}
{% endif %}{% endfor %}
{% endfor %}
